# Задание 3. Для этой задачи:
# 1) придумайте 2-3 решения (не менее двух)
# 2) оцените сложность каждого решения в нотации О-большое
# 3) сделайте вывод, какое решение эффективнее и почему
# Сама задача: Имеется хранилище с информацией о компаниях: название и годовая прибыль. Для реализации хранилища можно
# применить любой подход, который вы придумаете, например, реализовать словарь. Реализуйте поиск трех компаний
# с наибольшей годовой прибылью. Выведите результат.

company_repo = {'Alfa Jsc': 100000.00,
                'Beta Ltd': 1200000.00,
                'Gamma Ltd': 150000.00,
                'Delta Jsc': 2500000.00,
                'Echo Ltd': 900000.00}

# First way. Total = O(1) + O(N*logN) + O(N) + O(1) + O(N) + O(1) + O(1) >> O(N*logN)
top_lst = []                                                            # O(1)
top_dict = sorted(company_repo, key=company_repo.get, reverse=True)     # O(N*logN)
for company in top_dict:                                                # O(N)
    top_lst.append(company)                                             # O(1)
for top_st in top_lst[:3]:                                              # O(N) + O(1) - для красоты
    print(top_st, company_repo[top_st])                                 # O(1)

print()
# Second way. Total = O(N*logN) + O(1) + O(N) + O(1) + O(1) + O(1) >> O(N*logN)
top_dict = sorted(company_repo, key=company_repo.get, reverse=True)     # O(N*logN)
i = 0                                                                   # O(1)
for company in top_dict:                                                # O(N)
    if i < 3:                                                           # O(1)
        print((i + 1), '.', company, ': ', company_repo[company])       # O(1)
        i += 1                                                          # O(1)
    else:
        break

""" Асимптоматическая сложность обоих алгоритмов примерно близка, разница заментна только при небольшом объеме
вычислений (тем более не заметна)))). Составляет по наибольшему O(N*logN). Но второй способ потребляет меньше памяти - 
не создается список для ключей и получения среза - надежней применения внешнего счетчика.
Второй цикл в первом способе, в принципе, не нужен - в ТЗ не было указания на формат вывода результата - "Три компании 
с наибольшей годовой прибылью", возможно было достаточно названий"""